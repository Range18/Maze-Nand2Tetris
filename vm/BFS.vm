function BFS.new 0
push constant 11
call Memory.alloc 1
pop pointer 0
push constant 0
pop this 5
push constant 1
pop this 6
push constant 14
pop this 7
push constant 13
pop this 8
push argument 0
pop this 0
push constant 300
call Queue.new 1
pop this 1
push constant 15
push constant 15
call TwoDimensionalArray.new 2
pop this 2
push constant 15
push constant 15
call TwoDimensionalArray.new 2
pop this 3
push constant 15
push constant 15
call TwoDimensionalArray.new 2
pop this 4
push constant 0
pop this 9
push constant 0
pop this 10
push pointer 0
return
function BFS.initialize 3
push argument 0
pop pointer 0
push constant 0
pop local 1
label WHILE_EXP0
push local 1
push constant 15
lt
not
if-goto WHILE_END0
push constant 0
pop local 2
label WHILE_EXP1
push local 2
push constant 15
lt
not
if-goto WHILE_END1
push this 2
push local 1
push local 2
push constant 0
call TwoDimensionalArray.setIntValue 4
pop temp 0
push this 3
push local 1
push local 2
push constant 1
neg
call TwoDimensionalArray.setIntValue 4
pop temp 0
push this 4
push local 1
push local 2
push constant 1
neg
call TwoDimensionalArray.setIntValue 4
pop temp 0
push local 2
push constant 1
add
pop local 2
goto WHILE_EXP1
label WHILE_END1
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function BFS.run 4
push argument 0
pop pointer 0
push pointer 0
call BFS.initialize 1
pop temp 0
push this 1
push this 6
call Queue.enqueue 2
pop temp 0
push this 1
push this 5
call Queue.enqueue 2
pop temp 0
push this 0
call Maze.getMap 1
pop local 0
label WHILE_EXP0
push this 1
call Queue.isEmpty 1
not
not
if-goto WHILE_END0
push this 1
call Queue.dequeue 1
pop local 2
push this 1
call Queue.dequeue 1
pop local 1
push this 0
push local 2
push local 1
call Maze.IsValid 3
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 0
push local 2
push local 1
call TwoDimensionalArray.getStringValue 3
pop local 3
push this 2
push local 2
push local 1
call TwoDimensionalArray.getIntValue 3
push constant 0
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push local 3
push constant 0
call String.charAt 2
push constant 32
eq
push local 3
push constant 0
call String.charAt 2
push constant 69
eq
or
push local 3
push constant 0
call String.charAt 2
push constant 83
eq
or
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push this 2
push local 2
push local 1
push constant 1
call TwoDimensionalArray.setIntValue 4
pop temp 0
push local 1
push this 7
eq
push local 2
push this 8
eq
and
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push constant 0
not
pop this 9
push argument 1
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push pointer 0
call BFS.reconstructPath 1
pop temp 0
push constant 0
push constant 0
call Output.moveCursor 2
pop temp 0
push constant 11
call String.new 1
push constant 69
call String.appendChar 2
push constant 120
call String.appendChar 2
push constant 105
call String.appendChar 2
push constant 116
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 102
call String.appendChar 2
push constant 111
call String.appendChar 2
push constant 117
call String.appendChar 2
push constant 110
call String.appendChar 2
push constant 100
call String.appendChar 2
push constant 33
call String.appendChar 2
call Output.printString 1
pop temp 0
label IF_FALSE4
push constant 0
return
label IF_FALSE3
push this 0
push local 2
push constant 1
sub
push local 1
call Maze.IsValid 3
if-goto IF_TRUE5
goto IF_FALSE5
label IF_TRUE5
push local 0
push local 2
push constant 1
sub
push local 1
call TwoDimensionalArray.getStringValue 3
pop local 3
push local 3
push constant 0
call String.charAt 2
push constant 32
eq
push local 3
push constant 0
call String.charAt 2
push constant 69
eq
or
if-goto IF_TRUE6
goto IF_FALSE6
label IF_TRUE6
push this 2
push local 2
push constant 1
sub
push local 1
call TwoDimensionalArray.getIntValue 3
push constant 0
eq
if-goto IF_TRUE7
goto IF_FALSE7
label IF_TRUE7
push this 3
push local 2
push constant 1
sub
push local 1
push local 1
call TwoDimensionalArray.setIntValue 4
pop temp 0
push this 4
push local 2
push constant 1
sub
push local 1
push local 2
call TwoDimensionalArray.setIntValue 4
pop temp 0
push this 1
push local 2
push constant 1
sub
call Queue.enqueue 2
pop temp 0
push this 1
push local 1
call Queue.enqueue 2
pop temp 0
label IF_FALSE7
label IF_FALSE6
label IF_FALSE5
push this 0
push local 2
push constant 1
add
push local 1
call Maze.IsValid 3
if-goto IF_TRUE8
goto IF_FALSE8
label IF_TRUE8
push local 0
push local 2
push constant 1
add
push local 1
call TwoDimensionalArray.getStringValue 3
pop local 3
push local 3
push constant 0
call String.charAt 2
push constant 32
eq
push local 3
push constant 0
call String.charAt 2
push constant 69
eq
or
if-goto IF_TRUE9
goto IF_FALSE9
label IF_TRUE9
push this 2
push local 2
push constant 1
add
push local 1
call TwoDimensionalArray.getIntValue 3
push constant 0
eq
if-goto IF_TRUE10
goto IF_FALSE10
label IF_TRUE10
push this 3
push local 2
push constant 1
add
push local 1
push local 1
call TwoDimensionalArray.setIntValue 4
pop temp 0
push this 4
push local 2
push constant 1
add
push local 1
push local 2
call TwoDimensionalArray.setIntValue 4
pop temp 0
push this 1
push local 2
push constant 1
add
call Queue.enqueue 2
pop temp 0
push this 1
push local 1
call Queue.enqueue 2
pop temp 0
label IF_FALSE10
label IF_FALSE9
label IF_FALSE8
push this 0
push local 2
push local 1
push constant 1
sub
call Maze.IsValid 3
if-goto IF_TRUE11
goto IF_FALSE11
label IF_TRUE11
push local 0
push local 2
push local 1
push constant 1
sub
call TwoDimensionalArray.getStringValue 3
pop local 3
push local 3
push constant 0
call String.charAt 2
push constant 32
eq
push local 3
push constant 0
call String.charAt 2
push constant 69
eq
or
if-goto IF_TRUE12
goto IF_FALSE12
label IF_TRUE12
push this 2
push local 2
push local 1
push constant 1
sub
call TwoDimensionalArray.getIntValue 3
push constant 0
eq
if-goto IF_TRUE13
goto IF_FALSE13
label IF_TRUE13
push this 3
push local 2
push local 1
push constant 1
sub
push local 1
call TwoDimensionalArray.setIntValue 4
pop temp 0
push this 4
push local 2
push local 1
push constant 1
sub
push local 2
call TwoDimensionalArray.setIntValue 4
pop temp 0
push this 1
push local 2
call Queue.enqueue 2
pop temp 0
push this 1
push local 1
push constant 1
sub
call Queue.enqueue 2
pop temp 0
label IF_FALSE13
label IF_FALSE12
label IF_FALSE11
push this 0
push local 2
push local 1
push constant 1
add
call Maze.IsValid 3
if-goto IF_TRUE14
goto IF_FALSE14
label IF_TRUE14
push local 0
push local 2
push local 1
push constant 1
add
call TwoDimensionalArray.getStringValue 3
pop local 3
push local 3
push constant 0
call String.charAt 2
push constant 32
eq
push local 3
push constant 0
call String.charAt 2
push constant 69
eq
or
if-goto IF_TRUE15
goto IF_FALSE15
label IF_TRUE15
push this 2
push local 2
push local 1
push constant 1
add
call TwoDimensionalArray.getIntValue 3
push constant 0
eq
if-goto IF_TRUE16
goto IF_FALSE16
label IF_TRUE16
push this 3
push local 2
push local 1
push constant 1
add
push local 1
call TwoDimensionalArray.setIntValue 4
pop temp 0
push this 4
push local 2
push local 1
push constant 1
add
push local 2
call TwoDimensionalArray.setIntValue 4
pop temp 0
push this 1
push local 2
call Queue.enqueue 2
pop temp 0
push this 1
push local 1
push constant 1
add
call Queue.enqueue 2
pop temp 0
label IF_FALSE16
label IF_FALSE15
label IF_FALSE14
label IF_FALSE2
label IF_FALSE1
label IF_FALSE0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function BFS.dispose 0
push argument 0
pop pointer 0
push this 1
call Queue.dispose 1
pop temp 0
push this 2
call TwoDimensionalArray.dispose 1
pop temp 0
push constant 0
return
function BFS.reconstructPath 7
push argument 0
pop pointer 0
push this 0
call Drawer.new 1
pop local 0
push this 0
call Maze.getMap 1
pop local 1
push constant 1
call String.new 1
pop local 2
push local 2
push constant 42
call String.appendChar 2
pop temp 0
push this 7
pop local 3
push this 8
pop local 4
push constant 0
pop this 10
label WHILE_EXP0
push local 3
push this 5
eq
push local 4
push this 6
eq
and
not
not
if-goto WHILE_END0
push local 1
push local 4
push local 3
push local 2
call TwoDimensionalArray.setStringValue 4
pop temp 0
push this 10
push constant 1
add
pop this 10
push constant 0
push constant 0
call Output.moveCursor 2
pop temp 0
push local 0
call Drawer.drawMaze 1
pop temp 0
push constant 20
call Sys.wait 1
pop temp 0
push constant 22
push constant 15
call Output.moveCursor 2
pop temp 0
push constant 7
call String.new 1
push constant 83
call String.appendChar 2
push constant 99
call String.appendChar 2
push constant 111
call String.appendChar 2
push constant 114
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 58
call String.appendChar 2
push constant 32
call String.appendChar 2
call Output.printString 1
pop temp 0
push this 10
call Output.printInt 1
pop temp 0
push this 3
push local 4
push local 3
call TwoDimensionalArray.getIntValue 3
pop local 5
push this 4
push local 4
push local 3
call TwoDimensionalArray.getIntValue 3
pop local 6
push local 5
pop local 3
push local 6
pop local 4
goto WHILE_EXP0
label WHILE_END0
push local 1
push this 6
push this 5
push constant 1
call String.new 1
push constant 83
call String.appendChar 2
call TwoDimensionalArray.setStringValue 4
pop temp 0
push this 10
push constant 1
add
pop this 10
push constant 22
push constant 15
call Output.moveCursor 2
pop temp 0
push constant 7
call String.new 1
push constant 83
call String.appendChar 2
push constant 99
call String.appendChar 2
push constant 111
call String.appendChar 2
push constant 114
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 58
call String.appendChar 2
push constant 32
call String.appendChar 2
call Output.printString 1
pop temp 0
push this 10
push constant 1
sub
call Output.printInt 1
pop temp 0
push constant 0
return
function BFS.getPathLength 0
push argument 0
pop pointer 0
push this 10
return
function BFS.isFound 0
push argument 0
pop pointer 0
push this 9
return
