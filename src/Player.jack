class Player {
    field boolean isCompleted;
    field int x,y;
    field String icon;

    constructor Player new(int startX, int startY, TwoDimensionalArray map) {
        let isCompleted = false;
        let x = startX;
        let y = startY;
        let icon = "P";
        do map.setStringValue(y, x, icon);
        
        return this;
    }

    method boolean isCompleted() {
        return isCompleted;
    }

    method Array move(int keyPressed, TwoDimensionalArray currentMap) {
        var Array moveTuple;
        var int newX, newY;
        var String cell;
        let moveTuple = Array.new(5);
        let moveTuple[4] = false; // false - не перемещение
        let moveTuple[0] = x;
        let moveTuple[1] = y;
        let newX = x;
        let newY = y;

        if ((keyPressed = 65) | (keyPressed = 97)) { // a - влево
            let newX = x - 1;
        }
        if ((keyPressed = 68) | (keyPressed = 100)) { // d - вправо
            let newX = x + 1;
        }
        if ((keyPressed = 87) | (keyPressed = 119)) { // w - вверх
            let newY = y - 1;
        }
        if ((keyPressed = 83) | (keyPressed = 115)) { // s - вниз
            let newY = y + 1;
        }

        // Сначала проверяем границы карты (0-14 для 15x15 карты)
        if ((newX < 0) | (newX > 14) | (newY < 0) | (newY > 14)) {
            // Если выход за границы - остаемся на месте
            let moveTuple[2] = x;
            let moveTuple[3] = y;
        } else {
            let cell = currentMap.getStringValue(newY, newX);
             // DEBUG:
            // do Output.moveCursor(0, 0);
           // do Output.printString("Cell: ");
           // do Output.printString(cell);
           // do Output.printString(" Code: ");
           // do Output.printInt(cell.charAt(0));
            
            // Проверяем, не стена ли в новой позиции
            if (cell.charAt(0) = 87) { // 87 = 'W'
                // Если стена - остаемся на месте
                let moveTuple[2] = x;
                let moveTuple[3] = y;
                let moveTuple[4] = false;
                // DEBUG:
                //do Output.printString(" Wall!");
            } else {
                let moveTuple[4] = true; // true - перемещение
                let moveTuple[2] = newX;
                let moveTuple[3] = newY;
                
                // Сначала обновляем старую позицию
                do currentMap.setStringValue(y, x, " ");
                
                // Затем обновляем новую позицию
                do currentMap.setStringValue(newY, newX, icon);
                
                // И только потом обновляем координаты игрока
                let x = newX;
                let y = newY;
                // DEBUG:
                // do Output.printString(" Move!");
            }
        }

        return moveTuple;
    }
}